{
  "_args": [
    [
      {
        "raw": "sorted-array-functions@^1.0.0",
        "scope": null,
        "escapedName": "sorted-array-functions",
        "name": "sorted-array-functions",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\Projects\\CleancronJob\\node_modules\\node-schedule"
    ]
  ],
  "_from": "sorted-array-functions@>=1.0.0 <2.0.0",
  "_id": "sorted-array-functions@1.1.0",
  "_inCache": true,
  "_location": "/sorted-array-functions",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sorted-array-functions-1.1.0.tgz_1514473270149_0.9288073291536421"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sorted-array-functions@^1.0.0",
    "scope": null,
    "escapedName": "sorted-array-functions",
    "name": "sorted-array-functions",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/node-schedule"
  ],
  "_resolved": "http://registry.npmjs.org/sorted-array-functions/-/sorted-array-functions-1.1.0.tgz",
  "_shasum": "78fe5808ffa1beebac2ce9a22d76039dabc599ff",
  "_shrinkwrap": null,
  "_spec": "sorted-array-functions@^1.0.0",
  "_where": "C:\\Projects\\CleancronJob\\node_modules\\node-schedule",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/sorted-array-functions/issues"
  },
  "dependencies": {},
  "description": "Maintain and search through a sorted array using some low level functions",
  "devDependencies": {
    "standard": "^8.4.0",
    "tape": "^4.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-zq6fLdGQixb9VZfT/tLgU+LzoedJyTbcf1I/TKETFeUVoWIfcs5HNr+SJSvQJLXRlEZjB1gpILTrxamxAdCcgA==",
    "shasum": "78fe5808ffa1beebac2ce9a22d76039dabc599ff",
    "tarball": "https://registry.npmjs.org/sorted-array-functions/-/sorted-array-functions-1.1.0.tgz"
  },
  "gitHead": "48487c6940fd1867d1a1357267a25a86a348f3eb",
  "homepage": "https://github.com/mafintosh/sorted-array-functions",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "sorted-array-functions",
  "optionalDependencies": {},
  "readme": "# sorted-array-functions\n\nMaintain and search through a sorted array using some low level functions\n\n```\nnpm install sorted-array-functions\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/sorted-array-functions.svg?style=flat)](http://travis-ci.org/mafintosh/sorted-array-functions)\n\n## Usage\n\n``` js\nvar sorted = require('sorted-array-functions')\nvar list = []\n\nsorted.add(list, 1)\nsorted.add(list, 4)\nsorted.add(list, 2)\n\nconsole.log(list) // prints out [1, 2, 4]\nconsole.log(sorted.has(list, 2)) // returns true\nconsole.log(sorted.has(list, 3)) // returns false\nconsole.log(sorted.eq(list, 2)) // returns 1 (the index)\nconsole.log(sorted.gt(list, 2)) // returns 2\nconsole.log(sorted.gt(list, 4)) // returns -1\n```\n\n## API\n\n#### `sorted.add(list, value, [compare])`\n\nInsert a new value into the list sorted.\nOptionally you can use a custom compare function that returns, `compare(a, b)` that returns 1 if `a > b`, 0 if `a === b` and -1 if `a < b`.\n\n#### `var bool = sorted.remove(list, value, [compare])`\n\nRemove a value. Returns true if the value was in the list.\n\n#### `var bool = sorted.has(list, value, [compare])`\n\nCheck if a value is in the list.\n\n#### `var index = sorted.eq(list, value, [compare])`\n\nGet the index of a value in the list (uses binary search).\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gte(list, value, [compare])`\n\nGet the index of the first value that is `>=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gt(list, value, [compare])`\n\nGet the index of the first value that is `>`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lte(list, value, [compare])`\n\nGet the index of the first value that is `<=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lt(list, value, [compare])`\n\nGet the index of the first value that is `<`.\nIf the value could not be found -1 is returned.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/sorted-array-functions.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "1.1.0"
}
